akka {
  loglevel = DEBUG

  actor {
    provider = cluster

    serialization-bindings {
      "sample.cqrs.CborSerializable" = jackson-cbor
    }
  }

  # For the sample, just bind to loopback and do not allow access from the network
  # the port is overridden by the logic in main class
  remote.artery {
    canonical.port = 0
    canonical.hostname = 127.0.0.1
  }


  cluster {
    seed-nodes = [
      "akka://Shopping@127.0.0.1:2551",
      "akka://Shopping@127.0.0.1:2552"
    ]

    roles = ["write-model", "read-model"]
  }

  # use Cassandra to store both snapshots and the events of the persistent actors
  persistence {

    journal {
      plugin = "gcp-datastore-journal"
      auto-start-journals = ["gcp-datastore-journal"]
    }

    snapshot-store {
      plugin = "gcp-datastore-snapshot"
      auto-start-snapshot-stores = ["gcp-datastore-snapshot"]
    }

  }

}

event-processor {
  id = "EventProcessor"            // type name of sharded event processor
  keep-alive-interval = 2 seconds  // event-processors ping interval
  tag-prefix = "tag"               // even processor tag prefix
  parallelism = 4                  // number of event processors
}

shopping.http.port = 0
shopping.askTimeout = 5 s

datastore.projectid = "innfactory-misc"
refresh-interval = 1000
